Think about what classrooms not to use
Logic about resources being required or optional

some lists probably want to be sets, but sections want to have a sorted list of
timeslots (have consistency check for this)

classrooms don't currently account for classes which are already scheduled in
them

need unittests for schedule operations and saving somehow
be able to deal with schedules with multi-scheduled rooms

saving needs better error handling
saving should check constraints as well before saving
saving is probably really slow
saving errors should be more informative

generally try to be robust to single section errors

Logic relating to locked classes
If a class is already scheduled, it should be assigned to the relevant event
make sure classrooms which already have classes in them don't get double-booked
teachers should have list of sections they're teaching

Think more about section scheduling consistency-- it's a consistency check but
should probably also be either logic- or constraint-enforced.

Potentially make a distinction between a required and optional constraint
(required constraint is also reflected in the search logic)
Or, constraints can have a search pruning functionality.

RoomAvailability is required for schedule_section

sanity checks:
timeblocks shouldn't overlap
classrooms shouldn't have duplicate timeblocks in availability
more assumption checks
